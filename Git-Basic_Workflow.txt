     <<< PARTE 1: CREAZIONE REPOSITORY REMOTA E CLONAZIONE IN LOCALE >>>

a)   Creo una "New Repository" su Git-Hub
b)   Aggiungo i colleghi alla Repo: Settings -> Manage Access
c)   Dalla Git Bash mi sposto nella cartella in cui voglio salvare la Repo localmente
d)   Clono la Repo di Git-Hub in locale: git clone https://....
     (per visualizzare l'URL della Repo su git-hub: tasto verde Code, copia link)
e)   Create la Repo locale posso procedere a staging e committing

     << PARTE 2: STAGING E COMMITTING >>

i)   Faccio il Pull per aggiornare la Repo locale
ii)  Apportate le modifiche faccio lo stage: git add nome_file
iii) Faccio il commit: git commit -m '...'
iv)  Faccio il push per aggiornare il mondo: git push origin branch_name


     << PARTE 3: BRANCHING E MERGING >>

I)   Creo una nuova branch: git branch nome_new_branch
II)  Mi sposto nella nuova branch: git checkout nome_new_branch
III) Per controllare branches: git log
IV)  Stage e commit nella nuova branch
V)   Torno nella branch principale: git checkout nome_branch_default
VI)  Faccio il merge: git merge nome_new_branch

     << PARTE 4: REBASE INTERATTIVO >>

1)   Dal branch principale faccio un numero >1 di stage e commit (senza push)
2)   Controllo i commit con il comando: git log --oneline
3)   Per effettuare un rebase interattivo: git rebase -i
3.1) Per selezionare un particolare commit: git rebase -i id_commit
     (l'id_commit del commit lo vedo con git log)
4)   Usare i comandi Vim per modifiche e salvataggio

     
1) Per entrare in modalità INSERT, e poter di conseguenza editare la lista di commit, premi il tasto "Ins" della tastiera.
2)Per eliminare un carattere, portare l'indicatore all'altezza desiderata e premere il tasto "x" sulla tastiera.
3)Per tornare in modalità NORMALE, ed essere quindi in grado di inserire i comandi di Vim, premere "Esc" sulla tastiera.


